storesales
storesales[storesales$region == '',]
storesales$region[storesales$region == '']
storesales$region[storesales$region == ''] <- "NW"
storesales
storesales$region[storesales$region == ''] <- 'NW'
storesales$region
storesales[storesales$region == 'SW' & storesales$sales == NA ,]
storesales[storesales$region == 'SW' && storesales$sales == NA ,]
storesales[storesales$region == 'SW' && is.na(storesales$sales == NA ,]
storesales[storesales$region == 'SW' & is.na(storesales$sales) ,]
is.na(storesales)
complete.cases(storesales)
is.na(storesales)
hist(storesales$region)
hist(storesales$region)
region <- c('NE', 'SE', 'MW', 'SW', '')
year <- c(2017, NA, 2017, 2017, 2017)
sales <- c(200, 30000, NaN, NA, 600)
tax <- c(20, 30, 40, NaN, 60)
storesales <- data.frame(region, year, sales, tax, stringsAsFactors = TRUE)
storesales
hist(storesales$region)
table(storesales)
storesales
summary(storesales$region)
barplot(prop.table(table(storesales$region))):
)
barplot(prop.table(table(storesales$region)))
table(storesales$region
)
table(storesales$region)
region <- c('NE', 'NE', 'MW', 'SW', '')
year <- c(2017, NA, 2017, 2017, 2017)
sales <- c(200, 30000, NaN, NA, 600)
tax <- c(20, 30, 40, NaN, 60)
storesales <- data.frame(region, year, sales, tax, stringsAsFactors = TRUE)
storesales
table(storesales$region)
barplot(prop.table(table(storesales$region)))
hist(storesales$year)
storesales$year
hist(storesales$year, na.rm = TRUE)
summary(storesales$sales)
summary(storesales$sales)
View(sleep)
aggr(sleep)
colSums(is.na(airquality))
is.na(airquality)
region <- c('NE', 'SE', 'MW', 'SW', '')
year <- c(2017, NA, 2017, 2017, 2017)
sales <- c(200, 30000, NaN, NA, 600)
tax <- c(20, 30, 40, NaN, 60)
storesales <- data.frame(region, year, sales, tax, stringsAsFactors = TRUE)
storesales
is.na(storesales)
complete.cases(storesales)
storesales[is.na(storesales$year),]
is.na(storesales$year)
storesales[is.na(storesales),]
is.na(storesales)
colSums(is.na(storesales))
is.na(storesales)
na.omit(storesales)
na.fail(storesales)
complete.cases(storesales)
storesales[!complete.cases(storesales),]
na.omit(storesales)
complete.cases(storesales)
storesales[complete.cases(storesales),]
na.omit(storesales)
region <- c('NE', 'SE', 'MW', 'SW', '')
year <- c(2017, NA, 2017, 2017, 2017)
sales <- c(200, 30000, NaN, NA, 600)
tax <- c(20, 30, 40, NaN, 60)
storesales <- data.frame(region, year, sales, tax, stringsAsFactors = FALSE)
storesales
NA * 2
NA * 0
NA * NA
NA / 3
NA / 0
0 / 0
na.fail(storesales)
is.na(storesales)
colSums(is.na(storesales))
complete.cases(storesales)
storesales[complete.cases(storesales),]
na.omit(storesales)
complete.cases(storesales)
!complete.cases(storesales)
storesales[!complete.cases(storesales),]
na.omit(storesales)
is.na(storesales)
complete.cases(storesales)
storesales[is.na(storesales),]
storesales[is.na(storesales$year),]
is.na(storesales$year
)
complete.cases(storesales)
na.omit(storesales)
help data.frame()
help data.frame
ls
ls()
getwd()
write.csv()
region <- c('NE', 'SE', 'MW', 'SW', '')
year <- c(2017, NA, 2017, 2017, 2017)
sales <- c(200, 30000, NaN, NA, 600)
tax <- c(20, 30, 40, NaN, 60)
storesales <- data.frame(region, year, sales, tax, stringsAsFactors = FALSE)
storesales
write.csv(storesales, file = "storesalesna.csv")
read.csv("storesalesna.csv")
read.csv("storesalesna.csv", na.strings = "")
is.na(storesales)
is.na(read.csv("storesalesna.csv", na.strings = ""))
is.na(read.csv("storesalesna.csv", na.strings = "","NA"))
is.na(read.csv("storesalesna.csv", na.strings = c("","NA"))
is.na(read.csv("storesalesna.csv", na.strings = c("","NA"))
read.csv("storesalesna.csv", na.strings = c("","NA"))
class(year)
sdf <- read.csv("storesalesna.csv", na.strings = c("","NA"))
sdf
sdf$year
class(sdf$year)
is.na(storesales)
is.na(sdf)
is.na(read.csv("storesalesna.csv", na.strings = c("","NA")))
is.na(read.csv("storesalesna.csv",
na.strings = c("","NA")))
region <- c('NE', 'SE', 'MW', 'SW', '')
year <- c(2017, NA, 2017, 2017, 2017)
sales <- c(200, 30000, NaN, NA, 600)
tax <- c(20, 30, 40, NaN, 60)
storesales <- data.frame(region, year, sales, tax, stringsAsFactors = FALSE)
storesales
write.csv(storesales, file = "storesalesna.csv")
is.na(read.csv("storesalesna.csv",
na.strings = c("","NA")))
read.csv("storesalesna.csv",
na.strings = c("","NA"))
na.fail(storesales)
is.na(storesales)
colSums(is.na(storesales))
complete.cases(storesales)
storesales[complete.cases(storesales),]
na.omit(storesales)
storesales[!complete.cases(storesales),]
is.na(storesales$year)
storesales[is.na(storesales$year),]
storesales[storesales$region == '',]
storesales
storesales[storesales$region == 'SW' & is.na(storesales$sales) ,]
storesales[storesales$region == 'SW' & is.na(storesales$sales) ,] = 0
storesales
storesales[storesales$region == 'SW' & is.na(storesales$sales),storesales$sales] = 0
storesales
region <- c('NE', 'SE', 'MW', 'SW', '')
year <- c(2017, NA, 2017, 2017, 2017)
sales <- c(200, 30000, NaN, NA, 600)
tax <- c(20, 30, 40, NaN, 60)
storesales <- data.frame(region, year, sales, tax, stringsAsFactors = FALSE)
storesales
storesales[storesales$region == 'SW' & is.na(storesales$sales),storesales$sales] = 0
storesales
storesales[storesales$region == 'SW',storesales$sales] = 0
storesales
storesales[storesales$region == 'SW',storesales$sales]
storesales
storesales$sales[storesales$region == 'SW']
storesales[storesales$region == '' & is.na(storesales$sales),]
storesales[storesales$region == '' && is.na(storesales$sales),]
storesales[storesales$region == 'SW' & is.na(storesales$sales),]
storesales$sales[storesales$region == 'SW' & is.na(storesales$sales)]
storesales$sales[storesales$region == 'SW' & is.na(storesales$sales)] = 0
storesales
storesales[storesales$region == 'SW' & is.na(storesales$sales),]
storesales$sales[storesales$region == 'SW' & is.na(storesales$sales)] = 0
storesales
storesales$sales
mean(storesales$sales )
mean(storesales$sales, na.rm = TRUE ) # Excludes NA
region <- c('NE', 'SE', 'MW', 'SW', '')
year <- c(2017, NA, 2017, 2017, 2017)
sales <- c(200, 30000, NaN, NA, 600)
tax <- c(20, 30, 40, NaN, 60)
storesales <- data.frame(region, year, sales, tax, stringsAsFactors = FALSE)
storesales
region <- c('NE', 'SE', 'MW', 'SW', '')
year <- c(2017, NA, 2017, 2017, 2017)
sales <- c(200, 30000, NaN, NA, 600)
tax <- c(20, 30, 40, NaN, 60)
storesales <- data.frame(region, year, sales, tax, stringsAsFactors = FALSE)
storesales
mean(storesales$sales )
mean(storesales$tax)
is.na(storesales)
colSums(is.na(storesales))
hist(storesales$year)
hist(storesales$sales)
plot(hist(storesales$sales)
)
plot(storesales$sales)
barplot(prop.table(table(storesales$region)))
region <- c('NE', 'SE', 'MW', 'SW', '')
year <- c(2017, NA, 2017, 2017, 2017)
sales <- c(200, 30000, NaN, NA, 600)
tax <- c(20, 30, 40, NaN, 60)
storesales <- data.frame(region, year, sales, tax, stringsAsFactors = FALSE)
storesales
write.csv(storesales, file = "storesalesna.csv")
read.csv("storesalesna.csv",
na.strings = c("","NA"))
storesales
mean(storesales$sales )
mean(storesales$sales, na.rm = TRUE ) # Excludes NA
storesales$tax
mean(storesales$tax, na.rm = TRUE ) # Excludes NA and NaN
mean(storesales$tax)
is.na(storesales)
colSums(is.na(storesales))
complete.cases(storesales)
storesales[complete.cases(storesales),]
na.omit(storesales)
storesales[!complete.cases(storesales),]
storesales[is.na(storesales$year),]
storesales$year[(storesales$year)] <- 2017
storesales$year[(storesales$year),] <- 2017
storesales$year[is.na(storesales$year),] <- 2017
is.na(storesales$year)
storesales$year[is.na(storesales$year)]
storesales$year[is.na(storesales$year)] = 2017
mean(storesales$tax)   # NaN returned
mean(storesales$tax, na.rm = TRUE ) # Excludes NA and NaN
# Count missing values...
is.na(storesales)
colSums(is.na(storesales))
complete.cases(storesales)
storesales[complete.cases(storesales),]
na.omit(storesales)
# Find the incomplete cases...
storesales[!complete.cases(storesales),]
storesales[is.na(storesales$year),]
storesales$year[is.na(storesales$year)] = 2017
# Find values that are empty but not NA...
storesales[storesales$region == '',]
storesales[storesales$region == '',]
# We know that only the NW source system does not send region
storesales$region[storesales$region == ''] <- 'NW'
storesales
# We want to replace the SW sales amount with zero
# but only SW....
storesales[storesales$region == 'SW' & is.na(storesales$sales),]
storesales$sales[storesales$region == 'SW' & is.na(storesales$sales)] = 0
storesales
complete.cases(storesales)
#  Data Quality Checks...
hist(storesales$sales)
plot(storesales$sales)
summary(storesales$sales)
table(storesales$region)
barplot(prop.table(table(storesales$region)))
region <- c('NE', 'SE', 'MW', 'SW', '')
year <- c(2017, NA, 2017, 2017, 2017)
sales <- c(200, 30000, NaN, NA, 600)
tax <- c(20, 30, 40, NaN, 60)
storesales <- data.frame(region, year, sales, tax, stringsAsFactors = FALSE)
storesales
write.csv(storesales, file = "storesalesna.csv")
read.csv("storesalesna.csv",
na.strings = c("","NA"))
na.fail(storesales)
storesales$sales
mean(storesales$sales )
mean(storesales$sales, na.rm = TRUE ) # Excludes NA
mean(storesales$tax)
mean(storesales$tax, na.rm = TRUE ) # Excludes NA and NaN
is.na(storesales)
colSums(is.na(storesales))
complete.cases(storesales)
storesales[complete.cases(storesales),]
na.omit(storesales)
storesales[!complete.cases(storesales),]
is.na(storesales$year)
storesales[is.na(storesales$year),]
storesales$year[is.na(storesales$year)] = 2017
storesales
storesales$region == ''
storesales[storesales$region == '',]
storesales$region[storesales$region == ''] = 'NW'
storesales
storesales[storesales$region == 'SW' & is.na(storesales$sales),]
storesales$sales[storesales$region == 'SW' & is.na(storesales$sales)] = 0
storesales
complete.cases(storesales)
hist(storesales$sales)
plot(storesales$sales)
summary(storesales$sales)
table(storesales$region)
barplot(prop.table(table(storesales$region)))
birthwt[train, 5]
birthwt
birthwt
set.seed(1)
train <- sample(1:nrow(birthwt), 0.75 * nrow(birthwt))
test = birthwt[-train, ]
library(MASS)
library(rpart)
help(birthwt)
cols <- c('low', 'race', 'smoke', 'ht', 'ui')
birthwt[cols] <- lapply(birthwt[cols], as.factor)
set.seed(1)
train <- sample(1:nrow(birthwt), 0.75 * nrow(birthwt))
test = birthwt[-train, ]
test
birthwt[train, 1]
trainLabels <- birthwt[train, 1]
testLabels <- iris[ind==2, 1]
library(class)
trainLabels <- birthwt[train, 1]
testLabels <- iris[ind==2, 1]
iris_pred <- knn(train = birthwt[train, ], test = birthwt[-train, ], cl = trainLabels, k=2)
iris_pred
iris_pred
birthwt_pred2 <- knn(train = birthwt[train, ], test = birthwt[-train, ], cl = trainLabels, k=2)
birthwt_pred2
library(gmodels)
CrossTable(x = testLabels, y = birthwt_pred2, prop.chisq=FALSE)
testLabels
birthwt_pred2
testLabels <- birthwt[-train, 1]
testLabels
library(gmodels)
CrossTable(x = testLabels, y = birthwt_pred2, prop.chisq=FALSE)
testLabels
str(testLabels)
library(class)
trainLabels <- birthwt[train, 1]
testLabels <- birthwt[-train, 1]
library(MASS)
library(rpart)
set.seed(1)
train <- sample(1:nrow(birthwt), 0.75 * nrow(birthwt))
test = birthwt[-train, ]
library(class)
trainLabels <- birthwt[train, 1]
testLabels <- birthwt[-train, 1]
str(testLabels)
birthwt_pred2 <- knn(train = birthwt[train, ], test = birthwt[-train, ], cl = trainLabels, k=2)
birthwt_pred2
library(gmodels)
CrossTable(x = testLabels, y = birthwt_pred2, prop.chisq=FALSE)
library(rattle)
fancyRpartPlot(birthwt_pred2, main="Birth Weight")
library(haven)
# SAS
read_sas("mtcars.sas7bdat")
samplepath = paste0(Sys.getenv("HOMEDRIVE"), Sys.getenv("HOMEPATH"), "\\Documents\\")
# Use forward slash as separator to avoid needed double backslash (escape seqence)
setwd(samplepath)
# Confirm we are in the right folder...
getwd()
library(haven)
# SAS
write_sas(mtcars, "mtcars.sas7bdat")
read_sas("mtcars.sas7bdat")
save workspace
q()
a = 44
q()
ls()
a <- 66
a
q()
ls()
b <- 55
c <- 99
exit
q()
ls()
a
mydata <- 1:100
mydata
q()
ls()
mydata
local({pkg <- select.list(sort(.packages(all.available = TRUE)),graphics=TRUE)
if(nchar(pkg)) library(pkg, character.only=TRUE)})
help.start()
a <- 66
A <- 88
a
A
n = 44
n
a <- 1:33
a
class(a)
b <- matrix(1:50, nrow = 5)
b
class(b)
class(a)
print("hi")
a
summary(a)
mean(a)
sd(a)
data()
AirPassengers
plot(AirPassengers)
hist(AirPassengers, col = 'blue')
View(AirPassengers)
demo()
demo('graphics')
demo('persp')
help()
help('print')
print
ls
q()
source('~/.active-rstudio-document', echo=TRUE)
install.packages("dplyr")
library(dplyr)
iris_tbl <- copy_to(sc, iris)
iris_summary <- iris_tbl %>%
mutate(Sepal_Width = ROUND(Sepal_Width * 2) / 2) %>%
group_by(Species, Sepal_Width) %>%
summarize(count = n(),
Sepal_Length = mean(Sepal_Length),
stdev = sd(Sepal_Length)) %>% collect
iris_tbl <- copy_to(sc, iris)
iris_summary <- iris %>%
mutate(Sepal_Width = ROUND(Sepal_Width * 2) / 2) %>%
group_by(Species, Sepal_Width) %>%
summarize(count = n(),
Sepal_Length = mean(Sepal_Length),
stdev = sd(Sepal_Length)) %>% collect
iris_summary <- iris %>%
mutate(Sepal_Width = round(Sepal_Width * 2) / 2) %>%
group_by(Species, Sepal_Width) %>%
summarize(count = n(),
Sepal_Length = mean(Sepal_Length),
stdev = sd(Sepal_Length)) %>% collect
iris
str(iris)
iris_summary <- iris %>%
mutate(Sepal_Width = round(Sepal.Width * 2) / 2) %>%
group_by(Species, Sepal.Width) %>%
summarize(count = n(),
Sepal.Length = mean(Sepal.Length),
stdev = sd(Sepal.Length)) %>% collect
library(ggplot2)
ggplot(iris_summary,
aes(Sepal.Width, Sepal.Length, color = Species)) +
geom_line(size = 1.2) +
geom_errorbar(aes(
ymin = Sepal.Length - stdev,
ymax = Sepal.Length + stdev),
width = 0.05) +
geom_text(aes(label = count),
vjust = -0.2, hjust = 1.2, color = "black") +
theme(legend.position="top")
library(dplyr)
library(ggplot2)
movies$genre_string = substr(as.character(movies$genre), 1, 10)
load(url("https://stat.duke.edu/~mc301/data/movies.Rdata"))
movies$genre_string = substr(as.character(movies$genre), 1, 10)
qplot(data = movies, fill=best_actor_win,
geom = "boxplot", x = genre_string,
y = audience_score, xlab = 'Genre',
facets = best_actor_win~.)
qplot(data = movies, fill=best_actor_win,
geom = "line", x = genre_string,
y = audience_score, xlab = 'Genre',
facets = best_actor_win~.)
source('~/.active-rstudio-document', echo=TRUE)
library(MASS)
library(rpart)
setwd("D:\Users\Bryan\Documents\GitHub\shared\shared\PowerBIwithR\Script")
setwd("D:/Users/Bryan/Documents/GitHub/shared/shared/PowerBIwithR/Script")
cols <- c('low', 'race', 'smoke', 'ht', 'ui')
birthwt[cols] <- lapply(birthwt[cols], as.factor)
set.seed(1)
train <- sample(1:nrow(birthwt), 0.75 * nrow(birthwt))
library(class)
rm(newbwdata)
trainLabels <- birthwt[train, 1]
newbwdata <- readRDS("newbwdata.Rda")
newbwdata <- readRDS("newbwdata.Rda")
source('D:/Users/Bryan/Documents/GitHub/shared/shared/PowerBIwithR/Script/BirthwightML/R_load_BirthWeight_ML.R', echo=TRUE)
birthwt_pred
newbwdata$low
newbwdata
newbwdata$low <- birthwt_pred
source('D:/Users/Bryan/Documents/GitHub/shared/shared/PowerBIwithR/Script/BirthwightML/R_load_BirthWeight_ML.R', echo=TRUE)
source('D:/Users/Bryan/Documents/GitHub/shared/shared/PowerBIwithR/Script/BirthwightML/R_load_BirthWeight_ML.R', echo=TRUE)
source('D:/Users/Bryan/Documents/GitHub/shared/shared/PowerBIwithR/Script/BirthwightML/R_load_BirthWeight_ML.R', echo=TRUE)
source('D:/Users/Bryan/Documents/GitHub/shared/shared/PowerBIwithR/Script/BirthwightML/R_load_BirthWeight_ML.R', echo=TRUE)
mtcars
setwd("D:/Users/Bryan/Documents/GitHub/Professional/Documents/Presentations/PowerBIwithR/Data/")
salesdata <- read.csv("sales.csv",header=T,sep=",")
heatmap(as.matrix(mtcars))
library("scatterplot3d") # load
scatterplot3d(iris[,1:3], pch = 16, color="steelblue")
library(magrittr)
library(leaflet)
m <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addMarkers(lng=77.2310, lat=28.6560, popup="The delicious food of chandni chowk")
m  # P
